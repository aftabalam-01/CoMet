generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int          @id @default(autoincrement())
  name                 String
  image                String?
  email                String       @unique
  phone                String
  password             String
  refreshToken         String?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  role                 Role         @default(STAFF)
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  isDeleted            Boolean      @default(false)
  orderBatches         OrderBatch[]
  shops                Shop[]
  transports           Transport[]
  orders               Order[]
}

model Shop {
  id            Int      @id @default(autoincrement())
  name          String
  image         String?
  email         String   @unique
  phone         String   @unique
  contactPerson String?
  totalBoxes    Int?     @default(0)
  billAmount    Int?     @default(0)
  contactPhone  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     User     @relation(fields: [createdById], references: [id])
  createdById   Int
  orders        Order[]
  isDeleted     Boolean  @default(false)
}

model Transport {
  id            Int      @id @default(autoincrement())
  image         String?
  name          String
  phone         String   @unique
  email         String   @unique
  contactPerson String?
  contactPhone  String?
  totalBoxes    Int?     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     User     @relation(fields: [createdById], references: [id])
  createdById   Int
  orders        Order[]
  isDeleted     Boolean  @default(false)
}

model Order {
  id             Int         @id @default(autoincrement())
  shops          Shop        @relation(fields: [shopId], references: [id])
  shopId         Int
  boxes          Int
  billno         Int
  note           String?
  lr             String?
  transports     Transport   @relation(fields: [transportId], references: [id])
  transportId    Int
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  createdBy      User        @relation(fields: [createdById], references: [id])
  createdById    Int
  deliveryStatus Status      @default(PENDING)
  payment        Payment     @default(PENDING)
  OrderBatches   OrderBatch? @relation(fields: [orderBatchId], references: [id])
  orderBatchId   Int?
  isDeleted      Boolean     @default(false)

  @@index([createdAt])
  @@index([shopId])
  @@index([transportId])
}

model OrderBatch {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  orders      Order[]
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
}

enum Role {
  ADMIN
  STAFF
}

enum Status {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
}

enum Payment {
  UNPAID
  PENDING
  PAID
  FAILED
  REFUNDED
}
